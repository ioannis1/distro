####################################################  packages
- name:          packages prometheus 
  apt:
     pkg:
                  - prometheus-blackbox-exporter 
                  - prometheus-postgres-exporter
                  - prometheus-pgbouncer-exporter
                  - prometheus-node-exporter
                  - prometheus-pushgateway 
                  - prometheus-apache-exporter
                  - pgbouncer
                  - prometheus-alertmanager
                  - prometheus 

####################################################  /etc/prometheus   FILES
- name:        Files   /etc/prometheus/*
  synchronize:  src="etc/prometheus/"  dest="/etc/prometheus"   delete='no'  owner=no  dirs=yes #rsync_opts=--ignore-existing

####################################################  /etc/prometheus  TEMPLATES
#
- name:        Templates /etc/prometheus/*
  template:    src=etc/prometheus/{{ item }}      dest="/etc/prometheus/"     owner=root
  with_items:
       - tiny.yml
       - static.yml          
       - pg.yml          
       - static_read-pg.yml  
       - static_write-pg.yml
       - federate_server.yml
       - federate_client.yml
       - dynamic_file.yml    
       - dynamic_consul.yml  
       - simple_consul.yml   
       - simple_consul_fed.yml   
       - pg_both_fed.yml     
       - pg_both.yml           


####################################################  symlinks 
- name:    symlink  prometheus.yml
  file:    src='/etc/prometheus/pg_both_fed.yml'   dest='/etc/prometheus/prometheus.yml'   state=link  owner=root   force=yes

  #file:    src='/etc/prometheus/pg.yml'   dest='/etc/prometheus/prometheus.yml'   state=link  owner=root   force=yes

- name:    symlink  rules/memory_rules.yml
  file:    src="/etc/prometheus/rules/memory_{{ os_family }}.yml"   dest='/etc/prometheus/rules/memory.yml'   state=link  owner=root   force=yes

####################################################  /etc/default
- name:        default prometheus exporters
  copy:        src="etc/default/{{ item }}"    dest="/etc/default"    owner=root   
  with_items:
      - prometheus
      - prometheus-node-exporter

- name:        Templates /etc/default/
  template:    src=etc/default/{{ item }}      dest="/etc/default/"     owner=root
  with_items:
       - prometheus-postgres-exporter      
       - prometheus-postgres-exporter-5433
####################################################  other exporters
- name:   grok_exporter
  when:   need_grok_exporter
  include:  grok_exporter.yml
####################################################  mkdir
- name:    mkdir  node_dat
  file:    dest='/var/lib/prometheus/node-exporter/node_dat'    state=directory  owner=root   force=yes

####################################################   reload servers

- name:       reload  prometheus exporters
  shell:       "/etc/init.d/prometheus-{{ item }}-exporter    force-reload"
  with_items:
      - postgres
      - node


- name:       reload  prometheus 
  systemd:    name="prometheus"   daemon_reload="yes"  enabled=no
####################################################  systemd
- name:        systemd file
  copy:        src=etc/systemd/system/prometheus-postgres-exporter_5433.service     dest="/etc/systemd/system/"     owner=root

- name:       reload  postgres-exporter
  systemd:    name="prometheus-postgres-exporter"   daemon_reload="yes"  state=stopped  enabled=no
  when:       ansible_facts.services["prometheus-postgres-exporter.service"].state  == 'disabled'

- name:       reload  postgres-exporter_5433
  systemd:    name="prometheus-postgres-exporter_5433"   daemon_reload="yes"  state=stopped  enabled=no
  when:       ansible_facts.services["prometheus-postgres-exporter_5433.service"].state  == 'disabled'

- name:       reload  postgres-exporter_5433
  systemd:    name="prometheus-postgres-exporter"   daemon_reload="yes"  state=restarted  enabled=no
  when:       ansible_facts.services["prometheus-postgres-exporter.service"].state  == 'running'

- name:       reload  postgres-exporter_5433
  systemd:    name="prometheus-postgres-exporter_5433"   daemon_reload="yes"  state=restarted  enabled=no
  when:       ansible_facts.services["prometheus-postgres-exporter_5433.service"].state  == 'running'
