# https://pgbouncer.github.io/config.html

[users]
nagios         =  pool_mode=statement

[pgbouncer]
listen_port    =  6543
listen_addr    =  127.0.0.1
; any, trust, plain, crypt, md5, cert, hba, pam
#auth_type     =   md5
#auth_file     =   /etc/pgbouncer/userlist.txt
#auth_type    =   cert
auth_type     =   hba
auth_hba_file =   /etc/pgbouncer/hba.conf
auth_query    =   SELECT usename, passwd FROM pg_shadow WHERE usename=$1
auth_user     =   postgres
;server_reset_query = DISCARD ALL
;server_reset_query_always = 0
;
;john
;;;connect_query=''
;;;verbose = 3

verbose      =  0
logfile      =  /tmp/log
pidfile      =  /tmp/pgbouncer.pid
ignore_startup_parameters = extra_float_digits
admin_users  =  postgres, ioannis
pool_mode    =  session     
default_pool_size    = 20  
# reserve_pool_size  # add 5 more slots if clients have to wait more than 'reserver_pool_timeout' seconds
min_pool_size        = 1
reserve_pool_size    = 5
reserve_pool_timeout = 3.0  
server_round_robin   = 0
max_db_connections   = 80
max_user_connections = 20
server_round_robin   = 0
#disable_pqexec       = 1
#application_name_add_host = 1
# Default log_connections and disconnections was 1
log_connections      = 1
stats_users          = postgres, ioannis
server_idle_timeout  = 60
query_wait_timeout   = 120
idle_transaction_timeout = 0.0
log_disconnections   = 0


;; disable, allow, require, verify-ca, verify-full
#client_tls_sslmode  = verify-full
client_tls_sslmode  =  disable
client_tls_ca_file = /etc/pgbouncer/root.crt
client_tls_key_file = /etc/pgbouncer/server.key
client_tls_cert_file = /etc/pgbouncer/server.crt

;; disable, allow, require, verify-ca, verify-full
server_tls_sslmode = disable
server_tls_ca_file = /etc/pgbouncer/root.crt
;; Needed only if backend server require client cert.
server_tls_key_file  = /etc/pgbouncer/pgbouncer.key
server_tls_cert_file = /etc/pgbouncer/pgbouncer.crt

[databases]
%include /etc/pgbouncer/databases.ini


;;;
;;; TLS settings for accepting clients
;;;

;;; Users allowed into database 'pgbouncer'
;admin_users = user2, someadmin, otheradmin
;stats_users = stats, root

;;; Pooler personality questions

;   session   ;   transaction ;   statement 
;pool_mode = session

;
; Query for cleaning connection immediately after releasing from client.
; No need to put ROLLBACK here, pgbouncer does not reuse connections
; where transaction is left open.
;
; Query for 8.3+:
;   DISCARD ALL;
;
; Older versions:
;   RESET ALL; SET SESSION AUTHORIZATION DEFAULT
;
; Empty if transaction pooling is in use.
;
;server_reset_query = DISCARD ALL


; Whether server_reset_query should run in all pooling modes.
; If it is off, server_reset_query is used only for session-pooling.
;server_reset_query_always = 0


;; Use <appname - host> as application_name on server.
;application_name_add_host = 0
#application_name_add_host = 1


;;; Logging

;log_connections = 1
;log_disconnections = 1
;log_pooler_errors = 1
;; Period for writing aggregated stats into log.
;stats_period = 60
;; Logging verbosity.  Same as -v switch on command line.
;verbose = 0


;; Close server connection if its been connected longer.
;server_lifetime = 3600
;; Close server connection if not used  to clean unnecessary connections from pool after peak.
;server_idle_timeout = 600
;; Disconnect clients who have not managed to log in after connecting in this many seconds.
;client_login_timeout = 60
;; Clean automatically created database entries (via "*") if they stay unused in this many seconds.
; autodb_idle_timeout = 3600
;; How long SUSPEND/-R waits for buffer flush before closing connection.
;suspend_timeout = 10
;; Close connections which are in "IDLE in transaction" state longer than this many seconds.
;idle_transaction_timeout = 0


;;; Random stuff

;; Hackish security feature.  Helps against SQL-injection - when PQexec is disabled,
;disable_pqexec = 0
;; Config file to use for next RELOAD/SIGHUP.
;; By default contains config file from command line.
;conffile
;%include /etc/pgbouncer/pgbouncer-other.ini
